---
globs: components/ChatWindow.tsx,services/geminiService.ts
description: Subtilit√©s critiques de l'impl√©mentation Web Speech API
---

# üé§ Subtilit√©s Critiques - Web Speech API

## ‚ö†Ô∏è **Probl√®mes Connus & Solutions Appliqu√©es**

### 1. **√âcho/Duplication de Transcription**
**Probl√®me :** L'accumulation des r√©sultats cr√©ait des r√©p√©titions terribles
```javascript
// ‚ùå MAUVAIS - Accumule les r√©sultats
setInputText(prev => prev + newText);

// ‚úÖ BON - Reconstruit le texte complet
const fullText = finalTranscript + interimTranscript;
setInputText(fullText);
```

### 2. **Gestion des R√©sultats isFinal vs Interim**
```javascript
// R√©cup√©rer TOUS les r√©sultats finaux depuis le d√©but (pas juste les nouveaux)
for (let i = 0; i < event.results.length; ++i) {
  if (event.results[i].isFinal) finalTranscript += event.results[i][0].transcript;
}

// R√©cup√©rer seulement les nouveaux r√©sultats interm√©diaires
for (let i = event.resultIndex; i < event.results.length; ++i) {
  if (!event.results[i].isFinal) interimTranscript += event.results[i][0].transcript;
}
```

### 3. **Protection Contre les R√©sultats en Attente**
Utilisation d'un flag `isMessageSentRef` pour √©viter que des r√©sultats vocaux re-remplissent le champ apr√®s envoi.

### 4. **Configuration Critique**
```javascript
recognition.continuous = true;  // ESSENTIEL pour transcription continue
recognition.interimResults = true;  // Pour feedback temps r√©el
recognition.lang = 'fr-FR';  // Langue fran√ßaise
```

## üîÑ **Flux de Transcription Optimal**
1. Clic micro ‚Üí `recognition.start()`
2. R√©sultats ‚Üí Reconstruction compl√®te du texte
3. Envoi message ‚Üí `recognition.stop()` + flag protection
4. Nouveau clic ‚Üí R√©initialisation flag + red√©marrage

## üì± **Compatibilit√©**
- Chrome/Edge : Support complet
- Firefox : Support limit√©
- Safari : Support partiel
- Mobile : Variable selon navigateur